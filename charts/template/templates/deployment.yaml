apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.serverName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.serverName }}
  template:
    metadata:
      labels:
        app: {{ .Values.serverName }}
    spec:
      containers:
        - name: minecraft
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: JVM_OPTS
              value: "{{ .Values.env.JVM_OPTS }}"
            - name: EULA
              value: "{{ .Values.env.EULA }}"
            - name: SERVERNAME
              value: "{{.Values.serverName}}"
            - name: RABBITMQ_HOST
              value: "{{.Values.RABBITMQ_HOST}}"
            - name: RABBITMQ_PORT
              value: "{{.Values.RABBITMQ_PORT}}"
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: username
            - name: RABBITMQ_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: password
